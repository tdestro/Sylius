daemon off;

env DOCUMENT_ROOT;
env FRONT_CONTROLLER_FILE;

user www-data;
worker_processes auto;
error_log /app/ngnix.log info;

events {

	worker_connections 4096;
}


http {

	include mime.types;
	include gzip_params;
	server_tokens off;
	default_type application/octet-stream;

	client_max_body_size 32m;

	access_log /dev/stdout;

	sendfile on;

	keepalive_timeout 650;
	keepalive_requests 10000;

	map $http_x_forwarded_proto $fastcgi_https {

		default '';
		https on;
	}

	include /etc/nginx/conf.d/nginx-http.conf;

	upstream php-fpm {

		server 127.0.0.1:9000 max_fails=3 fail_timeout=3s;
	}

	server {

		listen 80;
		server_name www.destromachines.com;

		location '/.well-known/acme-challenge' {

			default_type "text/plain";
			root /var/www/letsencrypt;
		}

		location / {

			# Redirect any http requests to https
			return 301 https://$server_name$request_uri;
		}
	}

server {

  listen 443 ssl;
  server_name www.destromachines.com;
  ssl_certificate /etc/letsencrypt/live/destromachines.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/destromachines.com/privkey.pem;
  add_header Strict-Transport-Security "max-age=31536000";

  if ($host = 'destromachines.com') {

    return 301 https://www.destromachines.com$request_uri;
  }

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://127.0.0.1:8080;
  }
}
	server {

		set_by_lua $docroot 'return os.getenv("DOCUMENT_ROOT")';
		set_by_lua $front_controller_file 'return os.getenv("FRONT_CONTROLLER_FILE")';

		listen 8080;
		root $docroot;
		index index.php index.html index.htm;

		location /power-tower {
           rewrite ^/power-tower https://www.destromachines.com/en_US/products/power-tower permanent;
         }

		# Media: images, icons, video, audio, HTC
		#location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
		#
		#	expires 10m;
		#	access_log off;
		#	etag on;
		#	add_header Cache-Control "public";
		#}

		# CSS and Javascript
		location ~* \.(?:css|js)$ {

			expires 10m;
			access_log off;
			etag on;
			add_header Cache-Control "public";
		}

		# pass the PHP scripts to FastCGI server
		location ~ \.php$ {

			try_files $uri =404;
			fastcgi_split_path_info ^(.+?\.php)(/.*)$;
			fastcgi_pass php-fpm;
			fastcgi_buffer_size 16k;
			fastcgi_buffers 256 16k;
			fastcgi_busy_buffers_size 4064k;
			fastcgi_max_temp_file_size 0;
			fastcgi_index index.php;
			include fastcgi_params;
			fastcgi_read_timeout 600s;
		}

		# This default behavior is intentionally using regex to allow
		# users to override this with the exact match directive as follows:
		# location = /_ah/health {
		#   # Define your own behavior.
		# }
		#
		location ~ ^/_ah/health$ {

			access_log off;
			return 200 'ok';
		}

		# Allow users to specify their own configuration
		include /etc/nginx/conf.d/nginx-app.conf;

		# Drop accesses for some files
		location = /favicon.ico {

			access_log off; log_not_found off;
		}
		location ~ /\. {

			access_log off; log_not_found off; deny all;
		}
		location ~ ~$ {

			access_log off; log_not_found off; deny all;
		}
	}
}
